version: '3.8'
services:
  # ---------------------------
  # GraphQL Gateway
  # ---------------------------
  # graphql-gateway:
  #   build:
  #     context: .
  #     dockerfile: ./gateway/Dockerfile.dev
  #     args:
  #       NODE_ENV: development
  #   volumes:
  #     - ./gateway:/usr/local/apps/gateway-app/dev
  #     # - exclude:/usr/local/apps/gateway-app/dev/node_modules/
  #   environment:
  #     - NODE_ENV=development
  #   command: npm run dev

  # ---------------------------
  # Inventory microservice
  # ---------------------------
  inventory-microservice:
    build:
      context: ./inventory-microservice
      dockerfile: ./Dockerfile.dev
      args:
        NODE_ENV: development
    volumes:
      - ./inventory-microservice:/usr/local/apps/inventory-app/dev
      # - exclude:/usr/local/apps/inventory-app/dev/node_modules/
    environment:
      - NODE_ENV=development
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=inventory-microservice
      - POSTGRES_DATABASE=postgres
      - SESSION_SECRET=secret
    env_file:
      - ./inventory-microservice/.env
    command: npm run dev
    depends_on:
      - inventory-microservice_db

  inventory-microservice_db:
    image: postgres
    volumes:
      - inventory-microservice_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=inventory-microservice
      - POSTGRES_INITDB_ROOT_PASSWORD=inventory-microservice

# EXAMPLE TO CREATE ANALYTICS SERVICE
# service_c:
#     build:
#       dockerfile: service_c/Dockerfile
#       context: .
#     volumes:
#       - ./service_c:/myapp
#     ports:
#       - "8082:3000"
#     depends_on:
#       - service_c_db
#   service_c_db:
#     image: mysql
#     environment:
#       MYSQL_ROOT_PASSWORD: service_c
#     volumes:
#       - ./service_c/tmp/mysqldb:/var/lib/mysql
#     ports:
#       - "3308:3306"

# Create a volume to persist data
volumes:
  inventory-microservice_db:
